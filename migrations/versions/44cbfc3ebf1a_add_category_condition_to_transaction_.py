"""Add category condition to transaction rules

Revision ID: 44cbfc3ebf1a
Revises: 805c41f3c557
Create Date: 2025-09-01 01:56:07.294191

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '44cbfc3ebf1a'
down_revision = '33fbad5fa9d9'
branch_labels = None
depends_on = None


def upgrade():
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    tables = inspector.get_table_names()

    # Create 'transaction_rule' table if it doesn't exist
    if 'transaction_rule' not in tables:
        op.create_table('transaction_rule',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('keyword', sa.String(length=100), nullable=True),
        sa.Column('category_condition', sa.String(length=100), nullable=True),
        sa.Column('transaction_type', sa.String(length=10), nullable=True),
        sa.Column('min_amount', sa.Float(), nullable=True),
        sa.Column('max_amount', sa.Float(), nullable=True),
        sa.Column('new_category', sa.String(length=100), nullable=True),
        sa.Column('new_description', sa.String(length=200), nullable=True),
        sa.Column('client_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
        sa.PrimaryKeyConstraint('id')
        )

    # Drop 'rule_account_link' table if it exists
    if 'rule_account_link' in tables:
        op.drop_table('rule_account_link')

    # Drop 'rule' table if it exists
    if 'rule' in tables:
        op.drop_table('rule')


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rule',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=True),
    sa.Column('keyword', sa.VARCHAR(length=100), nullable=True),
    sa.Column('condition', sa.VARCHAR(length=20), nullable=True),
    sa.Column('value', sa.FLOAT(), nullable=True),
    sa.Column('category', sa.VARCHAR(length=100), nullable=True),
    sa.Column('transaction_type', sa.VARCHAR(length=20), nullable=True),
    sa.Column('debit_account_id', sa.INTEGER(), nullable=True),
    sa.Column('credit_account_id', sa.INTEGER(), nullable=True),
    sa.Column('is_automatic', sa.BOOLEAN(), nullable=False),
    sa.Column('client_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['credit_account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['debit_account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rule_account_link',
    sa.Column('rule_id', sa.INTEGER(), nullable=False),
    sa.Column('account_id', sa.INTEGER(), nullable=False),
    sa.Column('is_exclusion', sa.BOOLEAN(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['rule_id'], ['rule.id'], ),
    sa.PrimaryKeyConstraint('rule_id', 'account_id')
    )
    op.drop_table('transaction_rule')
    # ### end Alembic commands ###
