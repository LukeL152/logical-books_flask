"""create budget model

Revision ID: 623e08f8e5e1
Revises: b0e12938248a
Create Date: 2025-09-06 15:05:55.782896

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine import reflection


# revision identifiers, used by Alembic.
revision = '623e08f8e5e1'
down_revision = 'b0e12938248a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = sa.inspect(bind)
    columns = [c['name'] for c in inspector.get_columns('budget')]

    if 'account_id' not in columns:
        op.add_column('budget', sa.Column('account_id', sa.Integer(), nullable=False))
    if 'period' not in columns:
        op.add_column('budget', sa.Column('period', sa.String(length=20), nullable=False))
    if 'start_date' not in columns:
        op.add_column('budget', sa.Column('start_date', sa.String(length=10), nullable=False))

    # Create foreign key only if account_id was just added
    if 'account_id' not in columns:
        op.create_foreign_key('fk_budget_account', 'budget', 'account', ['account_id'], ['id'])

    # Conditionally drop 'category' column
    if 'category' in columns:
        with op.batch_alter_table('budget', schema=None) as batch_op:
            batch_op.drop_column('category')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('budget', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category', sa.VARCHAR(length=100), nullable=False))
        batch_op.drop_constraint('fk_budget_account', type_='foreignkey')
        batch_op.drop_column('start_date')
        batch_op.drop_column('period')
        batch_op.drop_column('account_id')

    # ### end Alembic commands ###
