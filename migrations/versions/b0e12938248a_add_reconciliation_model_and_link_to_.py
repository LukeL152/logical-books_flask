"""Add Reconciliation model and link to JournalEntry

Revision ID: b0e12938248a
Revises: 732daf90ba9a
Create Date: 2025-09-05 01:31:15.953949

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine import reflection


# revision identifiers, used by Alembic.
revision = 'b0e12938248a'
down_revision = '732daf90ba9a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = reflection.Inspector.from_engine(bind)
    tables = inspector.get_table_names()

    if 'reconciliation' not in tables:
        op.create_table('reconciliation',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('account_id', sa.Integer(), nullable=False),
        sa.Column('statement_date', sa.String(length=10), nullable=False),
        sa.Column('statement_balance', sa.Float(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('client_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
        sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
        sa.PrimaryKeyConstraint('id')
        )

    columns = [c['name'] for c in inspector.get_columns('journal_entries')]
    if 'reconciliation_id' not in columns:
        with op.batch_alter_table('journal_entries', schema=None) as batch_op:
            batch_op.add_column(sa.Column('reconciliation_id', sa.Integer(), nullable=True))
            batch_op.create_foreign_key('fk_journal_entries_reconciliation', 'reconciliation', ['reconciliation_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = reflection.Inspector.from_engine(bind)
    tables = inspector.get_table_names()

    if 'journal_entries' in tables:
        columns = [c['name'] for c in inspector.get_columns('journal_entries')]
        if 'reconciliation_id' in columns:
            with op.batch_alter_table('journal_entries', schema=None) as batch_op:
                # In case the FK was created with an auto-generated name
                fks = inspector.get_foreign_keys('journal_entries')
                fk_name = 'fk_journal_entries_reconciliation'
                for fk in fks:
                    if fk['referred_table'] == 'reconciliation' and fk['constrained_columns'] == ['reconciliation_id']:
                        fk_name = fk['name']
                        break
                if fk_name:
                    batch_op.drop_constraint(fk_name, type_='foreignkey')
                batch_op.drop_column('reconciliation_id')

    if 'reconciliation' in tables:
        op.drop_table('reconciliation')
    # ### end Alembic commands ###
