"""Initial migration

Revision ID: 33fbad5fa9d9
Revises: 
Create Date: 2025-09-07 23:47:57.169642

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '33fbad5fa9d9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('client',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contact_name', sa.String(length=100), nullable=False),
    sa.Column('business_name', sa.String(length=100), nullable=True),
    sa.Column('contact_email', sa.String(length=120), nullable=True),
    sa.Column('contact_phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('entity_structure', sa.String(length=50), nullable=True),
    sa.Column('services_offered', sa.Text(), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('billing_cycle', sa.String(length=50), nullable=True),
    sa.Column('client_status', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('business_name')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('opening_balance', sa.Float(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_trail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('financial_period',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.String(length=10), nullable=False),
    sa.Column('end_date', sa.String(length=10), nullable=False),
    sa.Column('is_closed', sa.Boolean(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fixed_asset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('purchase_date', sa.String(length=10), nullable=False),
    sa.Column('cost', sa.Float(), nullable=False),
    sa.Column('useful_life', sa.Integer(), nullable=False),
    sa.Column('salvage_value', sa.Float(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('cost', sa.Float(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('vendor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('contact_name', sa.String(length=100), nullable=True),
    sa.Column('contact_email', sa.String(length=120), nullable=True),
    sa.Column('contact_phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('budget',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('period', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.String(length=10), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('category_rule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('keyword', sa.String(length=100), nullable=True),
    sa.Column('condition', sa.String(length=20), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('debit_account_id', sa.Integer(), nullable=True),
    sa.Column('credit_account_id', sa.Integer(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['credit_account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['debit_account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('depreciation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.String(length=10), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('fixed_asset_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['fixed_asset_id'], ['fixed_asset.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('import_template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('date_col', sa.Integer(), nullable=False),
    sa.Column('description_col', sa.Integer(), nullable=False),
    sa.Column('amount_col', sa.Integer(), nullable=True),
    sa.Column('debit_col', sa.Integer(), nullable=True),
    sa.Column('credit_col', sa.Integer(), nullable=True),
    sa.Column('category_col', sa.Integer(), nullable=True),
    sa.Column('notes_col', sa.Integer(), nullable=True),
    sa.Column('has_header', sa.Boolean(), nullable=False),
    sa.Column('negate_amount', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id')
    )
    op.create_table('inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reconciliation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('statement_date', sa.String(length=10), nullable=False),
    sa.Column('statement_balance', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recurring_transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('frequency', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.String(length=10), nullable=False),
    sa.Column('end_date', sa.String(length=10), nullable=True),
    sa.Column('debit_account_id', sa.Integer(), nullable=False),
    sa.Column('credit_account_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['credit_account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['debit_account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sale',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.String(length=10), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.String(length=10), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('debit_account_id', sa.Integer(), nullable=True),
    sa.Column('credit_account_id', sa.Integer(), nullable=True),
    sa.Column('rule_modified', sa.Boolean(), nullable=False),
    sa.Column('source_account_id', sa.Integer(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['credit_account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['debit_account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['source_account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_rule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('keyword', sa.String(length=100), nullable=True),
    sa.Column('category_condition', sa.Text(), nullable=True),
    sa.Column('transaction_type', sa.String(length=10), nullable=True),
    sa.Column('min_amount', sa.Float(), nullable=True),
    sa.Column('max_amount', sa.Float(), nullable=True),
    sa.Column('new_category', sa.String(length=100), nullable=True),
    sa.Column('new_description', sa.String(length=200), nullable=True),
    sa.Column('new_debit_account_id', sa.Integer(), nullable=True),
    sa.Column('new_credit_account_id', sa.Integer(), nullable=True),
    sa.Column('is_automatic', sa.Boolean(), nullable=True),
    sa.Column('delete_transaction', sa.Boolean(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('source_account_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['new_credit_account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['new_debit_account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['source_account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('journal_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.String(length=10), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('debit_account_id', sa.Integer(), nullable=False),
    sa.Column('credit_account_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('locked', sa.Boolean(), nullable=False),
    sa.Column('is_accrual', sa.Boolean(), nullable=True),
    sa.Column('is_reversing', sa.Boolean(), nullable=False),
    sa.Column('reversal_date', sa.String(length=10), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('transaction_type', sa.String(length=20), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('reconciliation_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['credit_account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['debit_account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['reconciliation_id'], ['reconciliation.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('journal_entry_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['journal_entry_id'], ['journal_entries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('document')
    op.drop_table('journal_entries')
    op.drop_table('transaction_rule')
    op.drop_table('transaction')
    op.drop_table('sale')
    op.drop_table('recurring_transaction')
    op.drop_table('reconciliation')
    op.drop_table('inventory')
    op.drop_table('import_template')
    op.drop_table('depreciation')
    op.drop_table('category_rule')
    op.drop_table('budget')
    op.drop_table('vendor')
    op.drop_table('user')
    op.drop_table('product')
    op.drop_table('fixed_asset')
    op.drop_table('financial_period')
    op.drop_table('audit_trail')
    op.drop_table('account')
    op.drop_table('role')
    op.drop_table('client')
    # ### end Alembic commands ###
